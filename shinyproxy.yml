# Apps configuration file stored in S3
# Bucket: ${TEAM_NAME}-shinyproxy-config
# Key: apps.yml

specs:
  # Shiny app with pre-initialization
  - id: sales-analytics
    display-name: Sales Analytics Dashboard
    description: Real-time sales analytics and reporting
    container-image: ${ECR_REGISTRY}/sales-analytics:v2.1.0
    container-cmd: ["R", "-e", "shiny::runApp('/app')"]
    port: 3838
    
    # Pre-initialization settings
    pre-initialization:
      enabled: true
      minimum-seats: 2
      max-seats: 10
      wait-time: 60000
      idle-timeout: 3600000
      sharing:
        enabled: true
        allowed-groups:
          - sales-team
          - sales-managers
          - executives
    
    # Resource requirements
    container-cpu-request: 2048
    container-memory-request: 4096
    
    # Application parameters
    parameters:
      - name: region
        type: select
        options: ["NA", "EMEA", "APAC", "LATAM"]
        default: "NA"
      - name: date_range
        type: text
        default: "last_30_days"
    
  # Python Dash app with pre-initialization
  - id: customer-insights
    display-name: Customer Insights Platform
    description: Advanced customer analytics and segmentation
    container-image: ${ECR_REGISTRY}/customer-insights:latest
    container-cmd: ["python", "src/app.py"]
    port: 8050
    
    pre-initialization:
      enabled: true
      minimum-seats: 3
      max-seats: 15
      wait-time: 120000
      idle-timeout: 7200000
      sharing:
        enabled: true
        allowed-users:
          - alice@company.com
          - bob@company.com
        allowed-groups:
          - marketing-team
          - data-scientists
    
    container-cpu-request: 4096
    container-memory-request: 8192
    
    # Custom environment variables
    additional-env:
      DASH_ENV: production
      ENABLE_CACHING: "true"
      CACHE_TTL: "300"
    
  # R Plumber API with pre-initialization
  - id: forecast-api
    display-name: Forecasting API
    description: ML-powered forecasting service
    container-image: ${ECR_REGISTRY}/forecast-api:v1.5.0
    container-cmd: ["R", "-e", "plumber::run('/api/plumber.R', port=8000)"]
    port: 8000
    
    pre-initialization:
      enabled: true
      minimum-seats: 5
      max-seats: 20
      wait-time: 180000
      idle-timeout: 10800000  # 3 hours
      sharing:
        enabled: false  # API instances should not be shared
    
    container-cpu-request: 2048
    container-memory-request: 4096
    
    # Health check configuration
    health-check:
      path: /health
      interval: 30
      timeout: 10
    
  # Jupyter notebook without pre-initialization
  - id: data-science-notebook
    display-name: Data Science Notebook
    description: Jupyter notebook for data exploration
    container-image: ${ECR_REGISTRY}/jupyter-ds:latest
    container-cmd: ["jupyter", "notebook", "--ip=0.0.0.0", "--port=8888", "--no-browser"]
    port: 8888
    
    # No pre-initialization for notebooks
    pre-initialization:
      enabled: false
    
    container-cpu-request: 4096
    container-memory-request: 16384
    
    # User-specific instances only
    access-groups:
      - data-scientists
      - ml-engineers
    
    # Persistent storage
    container-volumes:
      - "/home/jovyan/work:/efs/users/#{proxy.userId}/notebooks"
    
  # Streamlit app with conditional pre-initialization
  - id: operational-dashboard
    display-name: Operations Dashboard
    description: Real-time operational metrics
    container-image: ${ECR_REGISTRY}/ops-dashboard:latest
    container-cmd: ["streamlit", "run", "app.py", "--server.port=8501"]
    port: 8501
    
    # Pre-initialization only during business hours
    pre-initialization:
      enabled: true
      minimum-seats: 1
      max-seats: 5
      wait-time: 30000
      idle-timeout: 1800000  # 30 minutes
      schedule:
        enabled: true
        start-time: "08:00"
